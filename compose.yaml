services:

  frontend:
    build:
      context: ./frontend
    env_file: .env
    ports:
    - ${FRONTEND_PORT}:8000
  backend:
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    build:
      context: ./backend
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
    - ${BACKEND_PORT}:${BACKEND_PORT}
    # Backup-only container, not used as main database

  pdfuploader:
    build:
      context: ./pdfuploader
    env_file: .env
    ports:
      - ${PDFUPLOADER_PORT}:${PDFUPLOADER_PORT}
    volumes:
      - pdf_uploads:/pdf_uploads

  postgres:
    image: postgres:17
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    ports:
      - ${ADMINER_PORT}:8080

volumes:
  db_data:
  pdf_uploads:
  postgres_data: