# ${XXXXX} means variable XXXXX is stored in the .env file
services:
  frontend:
    build:
      context: ./frontend
    env_file: .env
    ports:
    - ${FRONTEND_PORT}:${FRONTEND_PORT}
    restart: unless-stopped
  backend:
    depends_on:
      postgres:
        condition: service_healthy
    build:
      context: ./backend
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
    - ${BACKEND_PORT}:${BACKEND_PORT}
    volumes:
    - pdf_uploads:/pdf_uploads
    restart: unless-stopped

  postgres:
    image: postgres:17
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backups:/mnt/backups
    labels:
      deck-chores.pg-dump.command: sh -c "pg_dump -c -U ${POSTGRES_USER} ${POSTGRES_DB} > postgres_$(date +%F).sql"
      deck-chores.pg-dump.interval: daily
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  adminer:
    image: adminer
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - ${ADMINER_PORT}:8080


  deck-chores:
    image: ghcr.io/funkyfuture/deck-chores:1
    deploy:
      mode: global
    environment:
      TIMEZONE: Europe/Helsinki
      DEFAULT_FLAGS: noservice
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - postgres_backups:/mnt/backups
    restart: unless-stopped

volumes:
  pdf_uploads:
  postgres_data:
  postgres_backups: